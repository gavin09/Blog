<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hg | Fronter]]></title>
  <link href="http://gavin09.github.io/Blog/blog/categories/hg/atom.xml" rel="self"/>
  <link href="http://gavin09.github.io/Blog/"/>
  <updated>2013-06-02T01:07:54+08:00</updated>
  <id>http://gavin09.github.io/Blog/</id>
  <author>
    <name><![CDATA[Gavin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mercurial 常用指令]]></title>
    <link href="http://gavin09.github.io/Blog/blog/2013/04/30/mercurial-command/"/>
    <updated>2013-04-30T16:09:00+08:00</updated>
    <id>http://gavin09.github.io/Blog/blog/2013/04/30/mercurial-command</id>
    <content type="html"><![CDATA[<h2>hg用途</h2>

<h2>指令</h2>

<pre><code>hg clone &lt;repo&gt;
</code></pre>

<p>將repo上的專案複製到local端</p>

<pre><code>hg status
</code></pre>

<p>查看有repo裡面的檔案更動情形</p>

<pre><code>hg add &lt;filename&gt;
hg commit -m 'single line message'
</code></pre>

<p>將更動的檔案加入，並用一行訊息記錄成一個commit</p>

<pre><code>hg pull
hg push
</code></pre>

<p>hg pull 從網路上的repo端做local端的更新，push則是將自己做的更新上傳到網路上的repo</p>

<pre><code>hg diff -r rev1 -r rev2
hg diff -c rev
</code></pre>

<p>-c 可以看這一次rev所做的改變<br/>
-r 則是看兩個rev之間，所做的改變</p>

<pre><code>hg log
</code></pre>

<p>查看所有更動記錄</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mercurial Queues Extension]]></title>
    <link href="http://gavin09.github.io/Blog/blog/2013/04/18/mercurial-queues-extension/"/>
    <updated>2013-04-18T15:27:00+08:00</updated>
    <id>http://gavin09.github.io/Blog/blog/2013/04/18/mercurial-queues-extension</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>mq 在管理多個檔案的patch時相當方便</p>

<h2>Enable mq extentions</h2>

<p>在 .hg/hgrc 當中新增</p>

<pre><code>[extensions]
mq =
</code></pre>

<h2>Command</h2>

<pre><code>hg qnew &lt;patch name&gt;
</code></pre>

<p>開啟patch</p>

<pre><code>hg qrefresh
hg qrefresh -m 'one line message'
hg qrefresh -e # multi-line message
hg qrefresh -I &lt;filename1&gt; -I &lt;filename2&gt; #只把filename1 filename2 的改變加入patch
</code></pre>

<p>所有的的改變都會加入patch</p>

<pre><code>hg qqueue [option] [queue]

-l --list   list all available queues
   --active print name of active queue
-c --create create new queue
   --rename rename active queue
   --delete delete reference to queue
   --purge  delete queue, and remove patch dir
</code></pre>

<p>對queue的管理</p>

<pre><code>hg qdiff
</code></pre>

<p>列出所有改變的地方</p>

<pre><code>hg qseries  
hg qseries -v -s 
</code></pre>

<p>列出所有在queue的patch, 參數 -v -s 會列出詳細的資訊</p>

<pre><code>hg qapplied 
</code></pre>

<p>列出所有applied的patch</p>

<pre><code>hg qpop
</code></pre>

<p>移除the top patch</p>

<pre><code>hg qpush
</code></pre>

<p>加入patch</p>

<pre><code>hg export qtip &gt; /Export/FILE/Location/&lt;filename.patch&gt;  
</code></pre>

<p>匯出patch</p>

<p>Reference<br/>
1. <a href="http://stevelosh.com/blog/2010/08/a-git-users-guide-to-mercurial-queues/#versioned-patch-queues">http://stevelosh.com/blog/2010/08/a-git-users-guide-to-mercurial-queues/#versioned-patch-queues</a><br/>
2. <a href="https://developer.mozilla.org/en-US/docs/Mercurial_Queues">https://developer.mozilla.org/en-US/docs/Mercurial_Queues</a></p>
]]></content>
  </entry>
  
</feed>
